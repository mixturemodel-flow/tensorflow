image: docker:latest

stages:
  - prepare
  - compile
  - docker

prepare:
  stage: prepare
  services:
   - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f Dockerfile1 -t registry.gitlab.com/insightpt/tensorflow/tf_build_env:latest .
    - docker push registry.gitlab.com/insightpt/tensorflow/tf_build_env:latest

compile:
  stage: compile
  image: registry.gitlab.com/insightpt/tensorflow/tf_build_env:latest
  script:
    - bash ./configure
    - bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
    - bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
    - mv /tmp/tensorflow_pkg/tensorflow-1.2.0-cp35-cp35m-linux_x86_64.whl ./tensorflow-1.2.0-cp35-cp35m-linux_x86_64.whl
  artifacts:
    paths:
    - tensorflow-1.2.0-cp35-cp35m-linux_x86_64.whl
    
docker:
  stage: docker
  services:
   - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f Dockerfile2 -t registry.gitlab.com/insightpt/tensorflow/tf_gpu:latest .
    - docker push registry.gitlab.com/insightpt/tensorflow/tf_gpu:latest
  dependencies:
    - compile
